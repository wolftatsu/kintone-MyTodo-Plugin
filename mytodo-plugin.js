// Generated by CoffeeScript 1.6.3
(function() {
  var interval, listPage, loadCSS, modules, setDetailPageAction, timeout, waitRequirejsLoaded;

  timeout = 10 * 1000;

  interval = 100;

  modules = ['jquery', '//dl.dropboxusercontent.com/u/92165755/js/shortcut.js', '//dl.dropboxusercontent.com/u/92165755/js/util.js'];

  waitRequirejsLoaded = function(callback) {
    var perform;
    perform = function() {
      timeout -= interval;
      if (typeof require !== 'undefined') {
        console.log('perform');
        require.config({
          baseUrl: '//dl.dropboxusercontent.com/u/92165755/js',
          paths: {
            jquery: 'jquery.min'
          }
        });
        return callback();
      } else if (timeout > 0) {
        return waitRequirejsLoaded();
      } else {
        return console.log('abort');
      }
    };
    return setTimeout(perform, interval);
  };

  loadCSS = function(href) {
    return document.write('<link rel="stylesheet" type="text/css" href="' + href + '" />');
  };

  setDetailPageAction = function() {
    return require(modules, function($) {
      var $mydate, getNowTime;
      $mydate = $('div#record-gaia').find('div.input-date-cybozu input');
      getNowTime = function() {
        return dateFormat(new Date, '%h:%m') + " " + (new Date().getHours() > 12 ? "PM" : "AM");
      };
      shortcut.add("Ctrl+Alt+D", function() {
        return $(':focus').val(dateFormat(new Date, '%y-%M-%d'));
      });
      shortcut.add("Ctrl+Alt+T", function() {
        return $(':focus').val(getNowTime());
      });
      console.log('detail page');
      return setTimeout(function() {
        return $mydate.focus();
      }, 200);
    });
  };

  listPage = function() {
    return require(modules, function($) {
      var $icon, el;
      shortcut.add("Ctrl+Alt+N", function() {
        return $($(".select-cybozu")[0]).find("div[role='button']").focus();
      });
      console.log('list page');
      el = kintone.app.getHeaderMenuSpaceElement();
      $icon = $('<img>').attr('src', '//dl.dropboxusercontent.com/u/92165755/img/button-doc.png');
      $icon.css({
        width: '20px',
        height: '20px',
        position: 'relative',
        top: '5px',
        cursor: 'pointer'
      });
      $(el).append($icon);
      return $icon.on("click", function() {
        var condition;
        console.log("new button clicked");
        condition = kintone.app.getQueryCondition();
        console.log(condition);
        return kintone.api('/k/v1/records', 'GET', {
          app: kintone.app.getId(),
          query: condition
        }, function(res) {
          var k, report, task, text, v, work, _i, _j, _len, _len1, _ref;
          console.log(res);
          report = {};
          text = "";
          _ref = res.records;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            task = _ref[_i];
            console.log(task);
            if (!(task['project'].value in report)) {
              report[task['project'].value] = [];
            }
            report[task['project'].value].push(task['task'].value);
          }
          console.log(report);
          for (k in report) {
            v = report[k];
            text = "" + text + "\r\n[" + k + "]\r\n";
            for (_j = 0, _len1 = v.length; _j < _len1; _j++) {
              work = v[_j];
              text = "" + text + "ãƒ»" + work + "\r\n";
            }
          }
          return alert(text);
        });
      });
    });
  };

  kintone.events.on('app.record.create.show', function(event) {
    return waitRequirejsLoaded(setDetailPageAction);
  });

  kintone.events.on('app.record.edit.show', function(event) {
    console.log("edit page");
    return waitRequirejsLoaded(setDetailPageAction);
  });

  kintone.events.on('app.record.index.show', function(event) {
    console.log("index page");
    return waitRequirejsLoaded(listPage);
  });

}).call(this);
